{"version":3,"sources":["assets/polygon-logo.svg","lib/connectors/index.js","components/Wallet/ConnectWallet.js","hooks/index.js","components/Headers/index.js","components/Wallet/WalletInfo.js","components/Contents/index.js","components/Footer/index.js","config.js","components/NFTMarket/index.js","components/NFTMarket/home.js","components/NFTMarket/assets.js","components/NFTMarket/creator-dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","supportChainIdList","rpcEndpointList","reduce","accumulator","currentValue","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","walletlink","WalletLinkConnector","url","appName","connectorList","MetaMask","WalletConnect","WalletLink","ConnectWallet","useState","setIsConnecing","useWeb3React","activate","deactivate","active","error","suppress","useEffect","ethereum","window","on","handleChainChanged","chainId","console","log","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","tried","setTried","isAuthorized","then","undefined","catch","useEagerConnect","handleClick","connectorName","handleDisconnect","handleRetry","connector","walletConnectProvider","wc","uri","resetWalletConnectConnector","Dropdown","text","pointing","className","Menu","Item","onClick","menuStyle","border","borderRadius","boxShadow","marginBottom","marginTop","transition","fixedMenuStyle","backgroundColor","Content","state","menuFixed","this","Visibility","onBottomPassed","stickTopMenu","onBottomVisible","unStickTopMenu","once","borderless","fixed","style","Container","Image","size","src","logo","header","as","position","Component","WalletInfo","account","toString","message","contentStyle","width","minHeight","StickyLayout","Grid","columns","Column","React","Children","map","props","children","child","i","cloneElement","marginLeft","nftmarketaddress","nftaddress","client","ipfsHttpClient","FormNoFile","FormFile","NFTDAppIndex","library","open","setOpen","fileUrl","setFileUrl","price","name","description","formInput","updateFormInput","resetFile","e","a","file","target","files","add","progress","prog","added","path","data","JSON","stringify","image","createSale","signer","getSigner","contract","ethers","Contract","NFT","abi","createToken","transaction","wait","tx","event","events","value","args","tokenId","toNumber","utils","parseUnits","NFTMarket","getListingPrice","listingPrice","createMarketItem","Header","color","Modal","onClose","onOpen","trigger","Button","float","Input","type","onChange","Description","Form","fluid","label","placeholder","TextArea","action","icon","content","Actions","positive","Home","nfts","setNfts","loadingState","setLoadingState","loadNFTs","provider","tokenContract","marketContract","Market","fetchMarketItems","Promise","all","tokenURI","tokenUri","axios","get","meta","formatUnits","item","seller","owner","items","nft","createMarketSale","Segment","Icon","Card","Group","doubling","itemsPerRow","stackable","Meta","extra","primary","buyNft","MyAssets","fetchMyNFTs","CreatorDashboard","sold","setSold","fetchItemsCreated","soldItems","filter","Divider","horizontal","Boolean","getLibrary","Web3Provider","panes","menuItem","render","Tab","Pane","App","menu","vertical","tabular","grid","paneWidth","tabWidth","renderActiveOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9f277f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon-logo.ba11b0d1.svg\";","import {InjectedConnector} from '@web3-react/injected-connector';\nimport {WalletConnectConnector} from '@web3-react/walletconnect-connector';\nimport {WalletLinkConnector} from '@web3-react/walletlink-connector';\n\nrequire('dotenv').config();\n\nconst supportChainIdList = [97];\n\nconst getRpcEndpoint = (chainId) => {\n  const endpoints = {\n 97: 'bsctest',\n   \n  };\n\n  return 'https://data-seed-prebsc-1-s1.binance.org:8545/';\n};\n\nconst rpcEndpointList = supportChainIdList.reduce(\n(accumulator, currentValue) => ({\n  ...accumulator,\n  [currentValue]: getRpcEndpoint(currentValue),\n}),\n{}\n);\n\n// reset WalletConnect connector\nexport const resetWalletConnectConnector = (connector) => {\n  if (\n  connector &&\n  connector instanceof WalletConnectConnector &&\n  connector.walletConnectProvider?.wc?.uri\n  ) {\n    connector.walletConnectProvider = undefined;\n  }\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: supportChainIdList,\n});\n\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: rpcEndpointList,\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 12000,\n});\n\nexport const walletlink = new WalletLinkConnector({\n  url: getRpcEndpoint(1),\n  appName: 'Create React Ethereum DApp',\n  supportedChainIds: [1],\n});\n\nexport const connectorList = {\n  MetaMask: injected,\n  WalletConnect: walletconnect,\n  WalletLink: walletlink,\n};\n\nexport default connectorList;\n","import React, { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { useEagerConnect, useInactiveListener } from '../../hooks'\nimport connectorList, { resetWalletConnectConnector } from '../../lib/connectors'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst ConnectWallet = () => {\n  const [isConnecing, setIsConnecing] = useState(false);\n  const {activate, deactivate, active, error} = useWeb3React();\n\n  const triedEager = useEagerConnect();\n\n  useInactiveListener(!triedEager);\n\n  const handleClick = (connectorName) => () => {\n    setIsConnecing(true);\n    activate(connectorList[connectorName]);\n  };\n\n  const handleDisconnect = () => {\n    deactivate();\n  };\n\n  const handleRetry = () => {\n    setIsConnecing(false);\n    resetWalletConnectConnector(connectorList['WalletConnect']);\n    deactivate();\n  };\n\n  useEffect(() => {\n    if (active) {\n      setIsConnecing(false);\n    }\n  }, [active]);\n\n  return (\n  <Dropdown text='Wallet' pointing className='link item'>\n\n\n    {(() => {\n      if (active) {\n        return <Dropdown.Menu>\n          <Dropdown.Item className=\"button-disconnect\" onClick={handleDisconnect}>\n            Disconnect Wallet\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      } else {\n        if (!error) {\n          return <Dropdown.Menu>\n            <Dropdown.Item onClick={handleClick('MetaMask')}>MetaMask</Dropdown.Item>\n            <Dropdown.Item onClick={handleClick('WalletConnect')}>WalletConnect</Dropdown.Item>\n            <Dropdown.Item onClick={handleClick('WalletLink')}>WalletLink</Dropdown.Item>\n          </Dropdown.Menu>\n        } else {\n          return <Dropdown.Menu>\n            <Dropdown.Item onClick={handleRetry}>Retry</Dropdown.Item>\n          </Dropdown.Menu>\n        }\n      }\n    })()}\n\n  </Dropdown>\n  );\n};\n\nexport default ConnectWallet;\n","import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\n\nimport { injected } from '../lib/connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]);\n\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = (chainId) => {\n        console.log('chainChanged', chainId);\n        activate(injected);\n      };\n\n      const handleAccountsChanged = (accounts) => {\n        console.log('accountsChanged', accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n\n      const handleNetworkChanged = (networkId) => {\n        console.log('networkChanged', networkId);\n        activate(injected);\n      };\n\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n\n    return () => {};\n  }, [active, error, suppress, activate]);\n}\n","import React, {Component} from 'react'\nimport {\n  Container,\n  Image,\n  Menu,\n  Visibility,\n} from 'semantic-ui-react'\n\nimport logo from '../../assets/polygon-logo.svg'\nimport ConnectWallet from '../Wallet/ConnectWallet'\n\nconst menuStyle = {\n  border: 'none',\n  borderRadius: 0,\n  boxShadow: 'none',\n  marginBottom: '1em',\n  marginTop: '4em',\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease',\n};\n\nconst fixedMenuStyle = {\n  backgroundColor: '#fff',\n  border: '1px solid #ddd',\n  boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\n};\n\n\nexport default class Content extends Component {\n  state = {\n    menuFixed: true,\n  };\n\n  render() {\n    const {menuFixed} = this.state;\n\n    return (\n    <div>\n      <Visibility\n      onBottomPassed={this.stickTopMenu}\n      onBottomVisible={this.unStickTopMenu}\n      once={false}\n      >\n        <Menu\n        borderless\n        fixed={menuFixed ? 'top' : undefined}\n        style={menuFixed ? fixedMenuStyle : menuStyle}\n        >\n          <Container>\n            <Menu.Item>\n              <Image size='small' src={logo}/>\n            </Menu.Item>\n            <Menu.Item header>Start-Kit</Menu.Item>\n            <Menu.Item as='a'>Docs</Menu.Item>\n            <Menu.Item as='a'>Tutorial</Menu.Item>\n\n            <Menu.Menu position='right'>\n              <ConnectWallet/>\n            </Menu.Menu>\n          </Container>\n        </Menu>\n      </Visibility>\n    </div>\n    )\n  }\n}\n","import {useWeb3React} from '@web3-react/core';\n\nconst WalletInfo = () => {\n  const {active, chainId, account, error} = useWeb3React();\n  return (\n\n  <div className=\"wallet-info\">\n    <p>Create React Ethereum DApp</p>\n    <p>active: {active.toString()}</p>\n    {active && (\n    <div>\n      <p>account: {account}</p>\n      <p>chainId: {chainId}</p>\n    </div>\n    )}\n    {error && <p className=\"text-error\">error: {error.message}</p>}\n  </div>\n  );\n};\n\nexport default WalletInfo;\n","import React, {Component} from 'react'\nimport {\n  Grid,\n  Container\n} from 'semantic-ui-react'\n\n\n\nimport WalletInfo from \"../Wallet/WalletInfo\"\n\nconst contentStyle = {\n  marginTop: \"5em\",\n  width: \"100%\",\n  minHeight: \"calc(100vh - 70px)\",\n};\n\n\nexport default class StickyLayout extends Component {\n  render() {\n    return (\n\n    <Grid columns=\"equal\" style={contentStyle}>\n      <Grid.Column width=\"12\">\n\n        {\n          React.Children.map(this.props.children, (child, i) => {\n            return React.cloneElement(child, {})\n          })\n        }\n      </Grid.Column>\n\n      <Grid.Column>\n        <Container  style={{width: \"420px\", marginTop: \"4em\"}}>\n          <WalletInfo/>\n        </Container>\n      </Grid.Column>\n    </Grid>\n\n\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {Image, Container} from 'semantic-ui-react';\nimport './footer.css';\nimport logo from '../../assets/polygon-logo.svg'\n\nexport default class StickyLayout extends Component {\n  render() {\n    return (\n    <Container>\n      <footer className=\"footer\">\n        <div className=\"created\">\n          Created by\n          <Image size='small' src={logo} style={{marginLeft: \"10px\"}}/>\n        </div>\n        <div className=\"copyright\">Copyright © 2021 Polygon technology</div>\n      </footer>\n    </Container>\n    )\n  }\n}\n","\nexport const nftmarketaddress = \"0xf3FDedbb4Fcb18397024B7C60665399AC5cf4650\"\nexport const nftaddress = \"0x135eBF63B2178Df0FE8E12e32D0442e824fEcfDC\"\n  ","import React from 'react'\nimport { ethers } from 'ethers'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { Button, Form, Header, Image, Input, Modal } from 'semantic-ui-react'\n\nimport './nft.css'\nimport NFT from '../../abis/NFT'\nimport NFTMarket from '../../abis/NFTMarket'\nimport { useWeb3React } from '@web3-react/core'\nimport { nftaddress, nftmarketaddress } from '../../config'\n\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');\n\n\nconst FormNoFile = {\n  width: \"400px\"\n};\n\nconst FormFile = {\n  marginLeft: \"10.5em\",\n  width: \"400px\"\n};\n\n\nexport default function NFTDAppIndex() {\n  const {library} = useWeb3React();\n  const [open, setOpen] = React.useState(false);\n  const [fileUrl, setFileUrl] = React.useState(null);\n  const [formInput, updateFormInput] = React.useState({price: '', name: '', description: ''});\n\n\n  function resetFile(){\n    setFileUrl(null);\n    setOpen(false);\n  }\n\n  async function onChange(e) {\n    const file = e.target.files[0];\n    try {\n      const added = await client.add(\n      file,\n      {\n        progress: (prog) => console.log(`received: ${prog}`)\n      }\n      );\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      setFileUrl(url)\n    } catch (error) {\n      console.log('Error uploading file: ', error)\n    }\n  }\n\n  async function createMarket() {\n    const {name, description, price} = formInput;\n    if (!name || !description || !price || !fileUrl) return;\n\n    /* first, upload to IPFS */\n    const data = JSON.stringify({\n      name, description, image: fileUrl\n    });\n\n\n    try {\n      const added = await client.add(data)\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      /* after file is uploaded to IPFS, pass the URL to save it on Polygon */\n      createSale(url)\n    } catch (error) {\n      console.log('Error uploading file: ', error)\n    }\n    resetFile()\n  }\n\n/* ERC721 Token Create */\n  async function createSale(url) {\n    /* next, create the item */\n    if (library) {\n      let signer = library.getSigner();\n      let contract = new ethers.Contract(nftaddress, NFT.abi, signer);\n      let transaction = await contract.createToken(url);\n      let tx = await transaction.wait();\n      let event = tx.events[0];\n      let value = event.args[2];\n      let tokenId = value.toNumber();\n\n      const price = ethers.utils.parseUnits(formInput.price, 'ether');\n\n      /* then list the item for sale on the marketplace */\n      contract = new ethers.Contract(nftmarketaddress, NFTMarket.abi, signer);\n      let listingPrice = await contract.getListingPrice();\n      listingPrice = listingPrice.toString();\n\n      transaction = await contract.createMarketItem(nftaddress, tokenId, price, {value: listingPrice});\n      await transaction.wait();\n    }\n  }\n\n  return (\n  <Header size=\"huge\" color=\"grey\">Metaverse Marketplace\n    <Modal\n    onClose={() => setOpen(false)}\n    onOpen={() => setOpen(true)}\n    open={open}\n    trigger={<Button color='orange' style={{float: \"right\"}}>Sell Assets</Button>}\n    >\n      <Modal.Header>Sell Digital Assets</Modal.Header>\n      <Modal.Content image>\n\n        {\n          !fileUrl && (\n          <Input type=\"file\" onChange={onChange}>\n          </Input>\n          )\n        }\n\n\n        {\n          fileUrl && (\n          <Image size='large'\n                 src={fileUrl}\n                 />)\n        }\n        <Modal.Description>\n          <Form style={fileUrl ? FormNoFile : FormFile}>\n            <Form.Input fluid label='Assets name' placeholder='Assets name'\n                        onChange={e => updateFormInput({...formInput, name: e.target.value})}/>\n            <Form.TextArea label='Description' placeholder='Tell us more about your assets...'\n                           onChange={e => updateFormInput({...formInput, description: e.target.value})}/>\n            <Form.Input fluid label=\"Value\" action={{\n              color: 'teal',\n              icon: 'cart',\n              content: 'ETH',\n            }} onChange={e => updateFormInput({...formInput, price: e.target.value})}/>\n          </Form>\n\n\n        </Modal.Description>\n      </Modal.Content>\n\n\n      <Modal.Actions>\n        <Button onClick={resetFile}>Cancel</Button>\n        <Button onClick={createMarket} positive>\n          Ok\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  </Header>\n\n  )\n}\n","import React, {useEffect, useState} from 'react'\nimport {Header, Icon, Segment, Card, Button, Image} from 'semantic-ui-react'\nimport {useWeb3React} from '@web3-react/core'\nimport {ethers} from \"ethers\";\nimport axios from 'axios'\n\nimport NFT from '../../abis/NFT'\nimport Market from '../../abis/NFTMarket'\nimport {nftaddress, nftmarketaddress} from \"../../config\";\n\nimport \"./nft.css\"\n\nexport default function Home() {\n  const {library, account} = useWeb3React();\n  const [nfts, setNfts] = useState([]);\n  const [loadingState, setLoadingState] = useState('not-loaded');\n\n\n  useEffect(() => {\n    loadNFTs()\n  }, [library, account]);\n\n\n  async function loadNFTs() {\n    if (library) {\n      const provider = await library;\n      const tokenContract = new ethers.Contract(nftaddress, NFT.abi, provider);\n      const marketContract = new ethers.Contract(nftmarketaddress, Market.abi, provider);\n      const data = await marketContract.fetchMarketItems();\n\n\n      const items = await Promise.all(data.map(async i => {\n        const tokenUri = await tokenContract.tokenURI(i.tokenId);\n        const meta = await axios.get(tokenUri);\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          name: meta.data.name,\n          description: meta.data.description,\n        }\n        return item\n      }))\n      setNfts(items)\n      setLoadingState('loaded')\n    }\n  }\n\n  async function buyNft(nft) {\n    if (library) {\n      const signer = library.getSigner();\n      const contract = new ethers.Contract(nftmarketaddress, Market.abi, signer);\n\n      const price = ethers.utils.parseUnits(nft.price.toString(), 'ether');\n      const transaction = await contract.createMarketSale(nftaddress, nft.tokenId, {\n        value: price\n      })\n      await transaction.wait();\n      loadNFTs()\n    }\n  }\n\n  if (loadingState === \"not-loaded\") return (\n  <Segment placeholder>\n    <Header icon>\n      <Icon name='pdf file outline'/>\n      The Contract has not deployment on this blockchain network\n    </Header>\n  </Segment>\n  );\n\n\n  // if (loadingState === 'loaded' && !nfts.length) return (\n  // <Segment placeholder>\n  //   <Header icon>\n  //     <Icon name='pdf file outline'/>\n  //     No documents are listed for this customer.\n  //   </Header>\n  // </Segment>\n  // );\n\n\n  return (\n  <Card.Group doubling itemsPerRow={3} stackable>\n    {nfts.map((nft, i) => (\n\n\n    <Card key={nft.name}>\n      <Image src={nft.image} className=\"img\"/>\n\n      <Card.Content>\n        <Card.Header>{nft.name}</Card.Header>\n        <Card.Meta>{nft.price} ETH</Card.Meta>\n        <Card.Description>{nft.description}</Card.Description>\n      </Card.Content>\n\n      <Card.Content extra>\n        <Button style={{float: \"right\"}} primary onClick={() => buyNft(nft)}>\n          Buy\n        </Button>\n      </Card.Content>\n    </Card>\n    ))}\n  </Card.Group>\n  )\n}\n\n","import { ethers } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useWeb3React } from '@web3-react/core'\n\nimport NFT from '../../abis/NFT'\nimport Market from '../../abis/NFTMarket'\nimport { nftaddress, nftmarketaddress } from '../../config'\nimport { Card, Header, Icon, Image, Segment } from 'semantic-ui-react'\n\nimport './nft.css'\n\nexport default function MyAssets() {\n  const {library, account} = useWeb3React();\n  const [nfts, setNfts] = useState([]);\n  const [loadingState, setLoadingState] = useState('not-loaded');\n\n  useEffect(() => {\n    loadNFTs()\n  }, [library, account]);\n\n  async function loadNFTs() {\n    if (library) {\n      const signer = library.getSigner()\n\n      const marketContract = new ethers.Contract(nftmarketaddress, Market.abi, signer)\n      const tokenContract = new ethers.Contract(nftaddress, NFT.abi, library)\n      const data = await marketContract.fetchMyNFTs();\n\n      const items = await Promise.all(data.map(async i => {\n        const tokenUri = await tokenContract.tokenURI(i.tokenId);\n        const meta = await axios.get(tokenUri);\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          description: meta.data.description,\n          name: meta.data.name,\n        };\n        return item\n      }));\n      setNfts(items);\n      setLoadingState('loaded')\n    }\n  }\n\n  // if (loadingState === \"not-loaded\") return (\n  // <Segment placeholder>\n  //   <Header icon>\n  //     <Icon name='pdf file outline'/>\n  //     The Contract has not deployment on this blockchain network\n  //   </Header>\n  // </Segment>\n  // );\n\n  if (loadingState === 'loaded' && !nfts.length) return (\n  <Segment placeholder>\n    <Header icon>\n      <Icon name='pdf file outline'/>\n      No documents are listed for this customer.\n    </Header>\n  </Segment>\n  );\n\n  return (\n  <Card.Group doubling itemsPerRow={3} stackable>\n    {nfts.map((nft, i) => (\n\n    <Card key={nft.tokenId}>\n      <Image src={nft.image} className=\"img\"/>\n\n      <Card.Content>\n        <Card.Header>{nft.price} ETH</Card.Header>\n        <Card.Meta>tokenId: 0x{nft.tokenId}</Card.Meta>\n        <Card.Description>seller: {nft.seller}</Card.Description>\n      </Card.Content>\n\n      <Card.Content extra>\n      </Card.Content>\n\n    </Card>\n    ))}\n  </Card.Group>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport axios from 'axios'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, Divider, Header, Icon, Image } from 'semantic-ui-react'\n\nimport { nftaddress, nftmarketaddress } from '../../config'\n\nimport NFT from '../../abis/NFT'\nimport Market from '../../abis/NFTMarket'\n\nexport default function CreatorDashboard() {\n  const {library, account} = useWeb3React();\n  const [nfts, setNfts] = useState([]);\n  const [sold, setSold] = useState([]);\n  const [loadingState, setLoadingState] = useState('not-loaded');\n  useEffect(() => {\n    loadNFTs()\n  }, [library, account]);\n\n  async function loadNFTs() {\n    if (library) {\n      const signer = library.getSigner()\n\n      const marketContract = new ethers.Contract(nftmarketaddress, Market.abi, signer)\n      const tokenContract = new ethers.Contract(nftaddress, NFT.abi, library)\n      const data = await marketContract.fetchItemsCreated()\n\n      const items = await Promise.all(data.map(async i => {\n        const tokenUri = await tokenContract.tokenURI(i.tokenId)\n        const meta = await axios.get(tokenUri)\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          sold: i.sold,\n          image: meta.data.image,\n          description: meta.data.description,\n          name: meta.data.name,\n        };\n        return item\n      }))\n      /* create a filtered array of items that have been sold */\n      const soldItems = items.filter(i => i.sold);\n      setSold(soldItems);\n      setNfts(items);\n      setLoadingState('loaded')\n    }\n  }\n\n\n  return (\n\n\n  <div>\n    <Divider horizontal>\n      <Header as='h4'>\n        <Icon name='bar chart'/>\n        Items Created\n      </Header>\n    </Divider>\n\n    <Card.Group doubling itemsPerRow={3} stackable>\n      {nfts.map((nft, i) => (\n\n\n      <Card key={nft.name}>\n        <Image src={nft.image} className=\"img\"/>\n\n        <Card.Content>\n          <Card.Header>{nft.name}</Card.Header>\n          <Card.Meta>Price - {nft.price} ETH</Card.Meta>\n          <Card.Description>{nft.description}</Card.Description>\n        </Card.Content>\n\n        <Card.Content extra>\n        </Card.Content>\n      </Card>\n      ))}\n    </Card.Group>\n\n    <Divider horizontal>\n      <Header as='h4'>\n        <Icon name='bar chart'/>\n        Items Sold\n      </Header>\n    </Divider>\n\n\n    <div className=\"px-4\">\n      {\n        Boolean(sold.length) && (\n        <Card.Group doubling itemsPerRow={3} stackable>\n          {sold.map((nft, i) => (\n\n\n          <Card key={nft.name}>\n            <Image src={nft.image} className=\"img\"/>\n\n            <Card.Content>\n              <Card.Header>{nft.name}</Card.Header>\n              <Card.Meta>Price - {nft.price} ETH</Card.Meta>\n              <Card.Description>{nft.description}</Card.Description>\n            </Card.Content>\n\n            <Card.Content extra>\n            </Card.Content>\n          </Card>\n          ))}\n        </Card.Group>\n        )\n      }\n    </div>\n  </div>\n  )\n}\n","import {Web3ReactProvider} from '@web3-react/core';\nimport {Web3Provider} from '@ethersproject/providers';\n\nimport StickyLayout from './components/Headers';\nimport Content from './components/Contents';\nimport Footer from \"./components/Footer\";\nimport {Tab} from \"semantic-ui-react\";\n\nimport NFTDAppIndex from \"./components/NFTMarket\"\nimport Home from \"./components/NFTMarket/home\";\nimport MyAssets from \"./components/NFTMarket/assets\"\nimport CreatorDashboard from \"./components/NFTMarket/creator-dashboard\"\n\nimport './App.css';\n\nconst getLibrary = (provider) => {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 8000;\n  return library;\n};\n\nconst panes = [\n  {menuItem: 'Home', render: () => <Tab.Pane><Home/></Tab.Pane>},\n  {menuItem: 'Creator Dashboard', render: () => <Tab.Pane><CreatorDashboard/></Tab.Pane>},\n  {menuItem: 'Digital Assets', render: () => <Tab.Pane><MyAssets/></Tab.Pane>},\n];\n\nfunction App() {\n  return (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <div className=\"App\">\n      <StickyLayout/>\n      <Content>\n        <NFTDAppIndex/>\n        <Tab menu={{fluid: true, vertical: true, tabular: true}} grid={{paneWidth: 14, tabWidth: 2}}\n             renderActiveOnly={true} panes={panes}/>\n      </Content>\n      <Footer/>\n    </div>\n  </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n<React.StrictMode>\n  <App/>\n</React.StrictMode>,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}